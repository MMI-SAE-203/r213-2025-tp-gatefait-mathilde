---
import Header from "../../components/Header.astro";
import Base from "../../layouts/Base.astro";
import Footer from "../../components/Footer.astro";
import Card from "../../components/Card.astro";
import { filterByPrix, getOffres } from "../../backend.mjs";

let message = "";
let offres = [];
if (Astro.request.method === "POST") {
  const data = await Astro.request.formData();
  const minPrix = parseInt(data.get("minPrix") as string);
  const maxPrix = parseInt(data.get("maxPrix") as string);

  if (minPrix > 0 && maxPrix > 0 && maxPrix > minPrix) {
    offres = await filterByPrix(minPrix, maxPrix);
    if (offres.length === 0) {
      message = `Pas d'offres entre ${minPrix}€ et ${maxPrix}€`;
    } else {
      message = `Liste des offres entre ${minPrix}€ et ${maxPrix}€`;
    }
  } else {
    message = "Veuillez entrer des valeurs valides pour le prix.";
    offres = await getOffres();
  }
} else {
  offres = await getOffres();
}
---

<Base titre="Offres">
  <h1 class="m-10 text-4xl uppercase font-bold text-pink-700">Offres</h1>
  <p class="m-10">
    Vous trouverez ici les futurs offres que propose notre site
  </p>

  <form action="/offres" method="POST">
    <input type="number" name="minPrix" placeholder="Prix minimum" />
    <input type="number" name="maxPrix" placeholder="Prix maximum" />
    <input type="submit" value="Filtrer par prix" />
  </form>

  <div x-data="{ showFavorites: false, viewMode: 'grid' }" class="m-10">
    <div class="ml-5">
      <button
        @click="viewMode = 'grid'"
        :class="viewMode === 'grid' ? 'bg-blue-700' : 'bg-gray-300'"
        class="text-white font-bold py-2 px-4 rounded mr-2"
        >Afficher en grille</button
      >
      <button
        @click="viewMode = 'list'"
        :class="viewMode === 'list' ? 'bg-blue-700' : 'bg-gray-300'"
        class="text-white font-bold py-2 px-4 rounded">Afficher en liste</button
      >
      <button
        @click="showFavorites = !showFavorites"
        class="bg-blue-700 text-white font-bold py-2 px-4 rounded"
      >
        <span x-show="!showFavorites">Afficher les favoris</span>
        <span x-show="showFavorites">Afficher tout</span>
      </button>
      <a href="/offres/surface/80" class="m-10 text-blue-500 underline"
        >Voir les offres par surface</a
      >
      <div x-show="!showFavorites">
        <div
          :class="viewMode === 'grid' ? 'grid grid-cols-3 gap-4': 'flex flex-col gap-4'"
        >
          {offres.map((offre) => <Card {...offre} />)}
        </div>
      </div>

      <div
        x-show="showFavorites"
        :class="viewMode === 'grid' ? 'grid grid-cols-3 gap-4': 'flex flex-col gap-4'"
      >
        {offres.map((offre) => offre.favoris && <Card {...offre} />)}
      </div>
    </div>
  </div>
</Base>
